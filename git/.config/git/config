[core]
	editor = nvim
	excludesFile = ~/.config/git/ignore
    pager = delta
[user]
    email = zorcal.dev@gmail.com
	name = Zorcal
[init]
    defaultBranch = main
[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = true
	pager = true
[interactive]
    diffFilter = delta --color-only
[delta]
    navigate = true    # use n and N to move between diff sections
    light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
    side-by-side = true
    line-numbers = true
[merge]
    conflictstyle = diff3
[rebase]
	autoStash = true
	autosquash = true
[diff]
    colorMoved = default
    algorithm = histogram
[push]
	autoSetupRemote = true
[pull]
	rebase = true
[branch]
	autoSetupMerge = simple
[alias]
    # List all aliases and trim the "alias." prefix.
    alias = !git config --list | grep -E '^alias' | awk -F'.' '{print $2}'
    # Print last commit.
    last = log -1 HEAD --stat
    # Delete all branches except for a select few common ones and the current branch.
    # nuke = for-each-ref --format '%(refname:short)' refs/heads/ | grep -v 'master\|main\|stable\|staging\|develop\|trunk | xargs echo
    nuke = !"bash -c \"git for-each-ref --format '%(refname:short)' refs/heads/ | grep -v master | grep -v main | grep -v stable | grep -v staging | grep -v trunk | grep -v develop | grep -v $(git rev-parse --abbrev-ref HEAD 2>/dev/null) | xargs git branch -D 2>/dev/null\""
    # Undo all changes and remove all untracked files and dirs.
    fuckit = !"bash -c 'git reset HEAD --hard ; git clean -f'"
    # Amend staged changes to previous commit.
    amend = commit --amend --no-edit --no-verify
    # We always want colors for moved pieces.
	diff = diff --color-moved=plain
[url "ssh://git@gitlab.com"]
	insteadOf = https://gitlab.com
[url "git@github.com:"]
	insteadOf = <https://github.com/>
[url "ssh://git@github.com/googleapis/"]
	insteadOf = https://github.com/googleapis/
[url "ssh://git@github.com/grpc-gateway/"]
	insteadOf = https://github.com/grpc-gateway/
[rerere]
	enabled = true

[includeIf "gitdir:~/Work/"]
    path = config-work

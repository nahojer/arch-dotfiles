set shell sh
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set hidden true
set ignorecase true
set icons true

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd trash ${{
    set -f
    printf ":: Delete $f? [y/n] "
    read ans
    [ "$ans" = "y" ] && mv $fx ~/.trash
}}

# define a custom 'delete' command
cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"
    read ans
    [ "$ans" = "y" ] && rm -rf $fx
}}

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
        *) "Unsupported format" ;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# Remove some default bindings
map m
map "'"
map '"'

map . set hidden!
map a :push %mkdir<space>-p<space>
map T :push %touch<space>
map DD delete
map d trash
map x cut
map p paste
map y copy
map r rename
map <enter> open
map R reload
map gD cd ~/Downloads
map gw cd ~/Work
map gp cd ~/Projects
map gc cd ~/.config
map gs cd ~/.local/share/scripts